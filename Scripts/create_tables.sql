-- Criação das tabelas
CREATE TABLE CEP (
    CEP VARCHAR2(10) PRIMARY KEY,
    RUA VARCHAR2(100),
    CIDADE VARCHAR2(100),
    ESTADO VARCHAR2(2)
);

CREATE TABLE USUARIO (
    CPF VARCHAR2(14) PRIMARY KEY,
    CEP VARCHAR2(10),
    EMAIL VARCHAR2(100),
    SENHA VARCHAR2(50),
    NUMERO NUMBER,
    FOREIGN KEY (CEP) REFERENCES CEP(CEP)
);

CREATE TABLE CARGO (
    CARGO_FUNC VARCHAR2(50) PRIMARY KEY,
    SALARIO NUMBER CHECK (SALARIO > 0)
);

CREATE TABLE FUNCIONARIO (
    CPF_USU VARCHAR2(14) PRIMARY KEY,
    CARGO_FUNC VARCHAR2(50),
    DATA_DE_CONTRATACAO DATE,
    CPF_SUPERVISOR VARCHAR2(14),
    FOREIGN KEY (CPF_USU) REFERENCES USUARIO(CPF),
    FOREIGN KEY (CPF_SUPERVISOR) REFERENCES FUNCIONARIO(CPF_USU),
    FOREIGN KEY (CARGO_FUNC) REFERENCES CARGO(CARGO_FUNC)
);

CREATE TABLE CLIENTE (
    CPF_USU VARCHAR2(14) PRIMARY KEY,
    DATA_DE_ADESAO DATE,
    FOREIGN KEY (CPF_USU) REFERENCES USUARIO(CPF)
);

CREATE TABLE TELEFONE (
    CPF_USU VARCHAR2(14),
    NUM_TELEFONE VARCHAR2(15),
    PRIMARY KEY (CPF_USU, NUM_TELEFONE),
    FOREIGN KEY (CPF_USU) REFERENCES USUARIO(CPF)
);

CREATE TABLE MODELOMARCA (
    MODELO VARCHAR2(50) PRIMARY KEY,
    MARCA VARCHAR2(50)
);

CREATE TABLE CARRO (
    CHASSI VARCHAR2(17) PRIMARY KEY,
    MODELO_MC VARCHAR2(50),
    ANO NUMBER,
    PRECO NUMBER CHECK (PRECO >= 0),
    KM NUMBER CHECK (KM >= 0),
    COR VARCHAR2(30),
    FOREIGN KEY (MODELO_MC) REFERENCES MODELOMARCA(MODELO)
);

CREATE TABLE PEDIDO (
    HASH VARCHAR2(64) PRIMARY KEY,
    TIPO VARCHAR2(50),
    DATA DATE,
    DATA_ENTREGA DATE,
    STATUS VARCHAR2(20)
);

CREATE TABLE EQUIPAMENTO (
    ID NUMBER PRIMARY KEY,
    NOME VARCHAR2(50),
    DESCRICAO VARCHAR2(255)
);

CREATE TABLE SERVICO (
    PROTOCOLO VARCHAR2(64) PRIMARY KEY,
    NOME VARCHAR2(100)
);

CREATE TABLE PAGAMENTOSERVICO (
    PROTOCOLO_SERV VARCHAR2(64),
    ID_PAG NUMBER,
    METODO VARCHAR2(50),
    PRIMARY KEY (PROTOCOLO_SERV, ID_PAG),
    FOREIGN KEY (PROTOCOLO_SERV) REFERENCES SERVICO(PROTOCOLO)
);

CREATE TABLE PROTOCOLOVALOR (
    PROTOCOLO_SERV VARCHAR2(64),
    VALOR NUMBER CHECK (VALOR >= 0),
    PRIMARY KEY (PROTOCOLO_SERV),
    FOREIGN KEY (PROTOCOLO_SERV) REFERENCES SERVICO(PROTOCOLO)
);

CREATE TABLE PAGAMENTOPEDIDO (
    HASH_PED VARCHAR2(64),
    ID_PAG NUMBER,
    METODO VARCHAR2(50),
    VALOR NUMBER CHECK (VALOR >= 0),
    PRIMARY KEY (HASH_PED, ID_PAG),
    FOREIGN KEY (HASH_PED) REFERENCES PEDIDO(HASH)
);

CREATE TABLE ANUNCIO (
    CHASSI_CAR VARCHAR2(17),
    URL VARCHAR2(255) PRIMARY KEY,
    FOREIGN KEY (CHASSI_CAR) REFERENCES CARRO(CHASSI)
);

CREATE TABLE SOLICITA (
    CPF_CLI VARCHAR2(14),
    CPF_FUNC VARCHAR2(14),
    PROTOCOLO_SERV VARCHAR2(64),
    PRIMARY KEY (CPF_CLI, CPF_FUNC, PROTOCOLO_SERV),
    FOREIGN KEY (CPF_CLI) REFERENCES CLIENTE(CPF_USU),
    FOREIGN KEY (CPF_FUNC) REFERENCES FUNCIONARIO(CPF_USU),
    FOREIGN KEY (PROTOCOLO_SERV) REFERENCES SERVICO(PROTOCOLO)
);

CREATE TABLE VENDE (
    CHASSI_CAR VARCHAR2(17),
    HASH_PED VARCHAR2(64),
    CPF_FUNC VARCHAR2(14),
    CPF_CLI VARCHAR2(14),
    PRIMARY KEY (CHASSI_CAR),
    FOREIGN KEY (CHASSI_CAR) REFERENCES CARRO(CHASSI),
    FOREIGN KEY (HASH_PED) REFERENCES PEDIDO(HASH),
    FOREIGN KEY (CPF_FUNC) REFERENCES FUNCIONARIO(CPF_USU),
    FOREIGN KEY (CPF_CLI) REFERENCES CLIENTE(CPF_USU)
);

CREATE TABLE ENVOLVE (
    PROTOCOLO_SERV VARCHAR2(64),
    ID_EQUIP NUMBER,
    PRIMARY KEY (PROTOCOLO_SERV, ID_EQUIP),
    FOREIGN KEY (PROTOCOLO_SERV) REFERENCES SERVICO(PROTOCOLO),
    FOREIGN KEY (ID_EQUIP) REFERENCES EQUIPAMENTO(ID)
);

CREATE TABLE COMENTA (
    CPF_CLI VARCHAR2(14),
    CPF_FUNC VARCHAR2(14),
    URL_ANUN VARCHAR2(255),
    CONTEUDO VARCHAR2(500),
    DATA DATE,
    PRIMARY KEY (CPF_CLI, CPF_FUNC, URL_ANUN),
    FOREIGN KEY (CPF_CLI) REFERENCES CLIENTE(CPF_USU),
    FOREIGN KEY (CPF_FUNC) REFERENCES FUNCIONARIO(CPF_USU),
    FOREIGN KEY (URL_ANUN) REFERENCES ANUNCIO(URL)
);

CREATE TABLE RESPONDE (
    CPF_FUNC VARCHAR2(14),
    URL_ANUN VARCHAR2(255),
    DATA DATE,
    CONTEUDO VARCHAR2(500),
    PRIMARY KEY (CPF_FUNC, URL_ANUN),
    FOREIGN KEY (CPF_FUNC) REFERENCES FUNCIONARIO(CPF_USU),
    FOREIGN KEY (URL_ANUN) REFERENCES ANUNCIO(URL)
);

-- Criação de SEQUENCES
CREATE SEQUENCE SEQ_EQUIPAMENTO_ID START WITH 1 INCREMENT BY 1;

-- Criando uma constraint CHECK para validar o método de pagamento
ALTER TABLE PAGAMENTOSERVICO
    ADD CONSTRAINT CHK_METODO CHECK (
        METODO IN ('CARTAO', 'DINHEIRO', 'PIX')
    );

ALTER TABLE PAGAMENTOPEDIDO
    ADD CONSTRAINT CHK_METODO_PEDIDO CHECK (
        METODO IN ('CARTAO', 'DINHEIRO', 'PIX')
    );

-- Criando a constraint CHECK para validar o tipo do pedido
ALTER TABLE PEDIDO
    ADD CONSTRAINT CHK_TIPO_PEDIDO CHECK (
        TIPO IN ('RETIRADA', 'ENTREGA')
    );

-- Criando a constraint CHECK para validar o status do pedido
ALTER TABLE PEDIDO
    ADD CONSTRAINT CHK_STATUS_PEDIDO CHECK (
        STATUS IN ('AGUARDANDO', 'TRANSITO', 'ENTREGUE', 'CANCELADO')
    );

-- Criando a constraint CHECK para validar o cargo do funcionário
ALTER TABLE FUNCIONARIO
    ADD CONSTRAINT CHK_CARGO_FUNC CHECK (
        CARGO_FUNC IN ('VENDEDOR', 'GERENTE')
    );