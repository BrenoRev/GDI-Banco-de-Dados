-- PT1 DEFININDO OS TIPOS

-- Tipo para CEP
CREATE TYPE tp_CEP AS OBJECT (
    CEP VARCHAR2(10),
    RUA VARCHAR2(100),
    CIDADE VARCHAR2(100),
    ESTADO VARCHAR2(2),
    CONSTRUCTOR FUNCTION tp_CEP RETURN SELF AS RESULT
);
/
-- Tabela para armazenar CEPs
CREATE TABLE CEP_TABLE OF tp_CEP (
    PRIMARY KEY (CEP)
);

-- Tipo para USUARIO
CREATE TYPE tp_Usuario AS OBJECT (
    CPF VARCHAR2(14),
    CEP tp_CEP,  -- Referência ao tipo de objeto CEP
    EMAIL VARCHAR2(100),
    SENHA VARCHAR2(50),
    NUMERO NUMBER,
    CONSTRUCTOR FUNCTION tp_Usuario RETURN SELF AS RESULT
);
/
-- Tabela para USUARIOS, referenciando o tipo de CEP
CREATE TABLE USUARIO_TABLE OF tp_Usuario (
    PRIMARY KEY (CPF),
    CONSTRAINT FK_CEP FOREIGN KEY (CEP.CEP) REFERENCES CEP_TABLE(CEP)
);

-- Tipo para CARGO
CREATE TYPE tp_Cargo AS OBJECT (
    CARGO_FUNC VARCHAR2(50),
    SALARIO NUMBER,
    CONSTRUCTOR FUNCTION tp_Cargo RETURN SELF AS RESULT
);
/
-- Tabela para CARGOS
CREATE TABLE CARGO_TABLE OF tp_Cargo (
    PRIMARY KEY (CARGO_FUNC)
);

-- Tipo para FUNCIONARIO
CREATE TYPE tp_Funcionario AS OBJECT (
    CPF_USU VARCHAR2(14),
    CARGO_FUNC tp_Cargo,  -- Referência ao tipo de objeto CARGO
    DATA_DE_CONTRATACAO DATE,
    CPF_SUPERVISOR VARCHAR2(14),
    CONSTRUCTOR FUNCTION tp_Funcionario RETURN SELF AS RESULT
);
/
-- Tabela para FUNCIONARIO, referenciando tipos de USUARIOS e CARGOS
CREATE TABLE FUNCIONARIO_TABLE OF tp_Funcionario (
    PRIMARY KEY (CPF_USU),
    CONSTRAINT FK_USUARIO FOREIGN KEY (CPF_USU) REFERENCES USUARIO_TABLE(CPF),
    CONSTRAINT FK_SUPERVISOR FOREIGN KEY (CPF_SUPERVISOR) REFERENCES FUNCIONARIO_TABLE(CPF_USU)
);

-- Tipo para CLIENTE
CREATE TYPE tp_Cliente AS OBJECT (
    CPF_USU VARCHAR2(14),
    DATA_DE_ADESAO DATE,
    CONSTRUCTOR FUNCTION tp_Cliente RETURN SELF AS RESULT
);
/
-- Tabela para CLIENTE
CREATE TABLE CLIENTE_TABLE OF tp_Cliente (
    PRIMARY KEY (CPF_USU),
    CONSTRAINT FK_USUARIO FOREIGN KEY (CPF_USU) REFERENCES USUARIO_TABLE(CPF)
);

-- Tipo para TELEFONE
CREATE TYPE tp_Telefone AS OBJECT (
    NUM_TELEFONE VARCHAR2(15)
);
/
-- Definindo coleção de telefones
CREATE TYPE tp_Telefones AS TABLE OF tp_Telefone;
/
-- Tabela para Telefone usando NESTED TABLE para armazenar múltiplos números **TEM problema
CREATE TABLE TELEFONE_TABLE (
    CPF_USU VARCHAR2(14),   -- CPF do usuário
    TELEFONES tp_Telefones, -- Coleção de telefones
    PRIMARY KEY (CPF_USU),  -- Definindo CPF como chave primária
    FOREIGN KEY (CPF_USU) REFERENCES USUARIO_TABLE(CPF)  -- Referência ao CPF na tabela de usuários
)
NESTED TABLE TELEFONES STORE AS TELEFONES_NT;  -- Definindo onde armazenar a NESTED TABLE

-- Tipo para MODELOMARCA
CREATE TYPE tp_ModeloMarca AS OBJECT (
    MODELO VARCHAR2(50),
    MARCA VARCHAR2(50),
    CONSTRUCTOR FUNCTION tp_ModeloMarca RETURN SELF AS RESULT
);
/

-- Tipo para CARRO
CREATE TYPE tp_Carro AS OBJECT (
    CHASSI VARCHAR2(17),
    MODELO tp_ModeloMarca,  -- Referência ao tipo de objeto MODELOMARCA
    ANO NUMBER,
    PRECO NUMBER,
    KM NUMBER,
    COR VARCHAR2(30),
    CONSTRUCTOR FUNCTION tp_Carro RETURN SELF AS RESULT
);
/
-- Tabela para CARROS **TEM problema
CREATE TABLE CARRO_TABLE OF tp_Carro (
    PRIMARY KEY (CHASSI),
    CONSTRAINT FK_MODELO FOREIGN KEY (MODELO.MODELO) REFERENCES MODELOMARCA_TABLE(MODELO)
);

-- Tipo para PEDIDO
CREATE TYPE tp_Pedido AS OBJECT (
    HASH VARCHAR2(64),
    TIPO VARCHAR2(50),
    DATA DATE,
    DATA_ENTREGA DATE,
    STATUS VARCHAR2(20),
    CONSTRUCTOR FUNCTION tp_Pedido RETURN SELF AS RESULT
);
/
-- Tabela para PEDIDOS
CREATE TABLE PEDIDO_TABLE OF tp_Pedido (
    PRIMARY KEY (HASH)
);

-- Tipo para SERVICO
CREATE TYPE tp_Servico AS OBJECT (
    PROTOCOLO VARCHAR2(64),
    NOME VARCHAR2(100),
    CONSTRUCTOR FUNCTION tp_Servico RETURN SELF AS RESULT
);
/
-- Tabela para SERVIÇOS
CREATE TABLE SERVICO_TABLE OF tp_Servico (
    PRIMARY KEY (PROTOCOLO)
);

-- Tipo para EQUIPAMENTO
CREATE TYPE tp_Equipamento AS OBJECT (
    ID NUMBER,
    NOME VARCHAR2(50),
    DESCRICAO VARCHAR2(255),
    CONSTRUCTOR FUNCTION tp_Equipamento RETURN SELF AS RESULT
);
/
-- Tabela para EQUIPAMENTOS
CREATE TABLE EQUIPAMENTO_TABLE OF tp_Equipamento (
    PRIMARY KEY (ID)
);

